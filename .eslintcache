[{"C:\\Projetos\\netflixclone\\src\\index.js":"1","C:\\Projetos\\netflixclone\\src\\App.js":"2","C:\\Projetos\\netflixclone\\src\\Tmdb.js":"3","C:\\Projetos\\netflixclone\\src\\components\\MovieRow.js":"4","C:\\Projetos\\netflixclone\\src\\components\\FeaturedMovie.js":"5","C:\\Projetos\\netflixclone\\src\\components\\Header.js":"6"},{"size":199,"mtime":1611619894694,"results":"7","hashOfConfig":"8"},{"size":1873,"mtime":1611783522358,"results":"9","hashOfConfig":"8"},{"size":2701,"mtime":1611700215222,"results":"10","hashOfConfig":"8"},{"size":1759,"mtime":1611788673604,"results":"11","hashOfConfig":"8"},{"size":1591,"mtime":1611763845938,"results":"12","hashOfConfig":"8"},{"size":630,"mtime":1611782904172,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"uxe55b",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"16"},"C:\\Projetos\\netflixclone\\src\\index.js",[],["33","34"],"C:\\Projetos\\netflixclone\\src\\App.js",["35"]," import React, {useEffect, useState} from 'react';\n import './App.css';\n import Tmdb from './Tmdb';\n import MovieRow from './components/MovieRow';\n import FeaturedMovie from './components/FeaturedMovie';\n import Header from './components/Header';\n export default () =>{\n\n  //Para salvar o status\n  const [movieList, setMovieList]= useState([]);\n  const [featuredData, setFeaturedData] = useState(null);\n  const [blackHeader,setBlackHeader] = useState(false);\n  /*Executa o codigo assim q a tela for carregada*/\n  useEffect(() =>{\nconst loadAll = async ()=>{\n  // Pegando a lista Total\n  let list = await Tmdb.getHomeList();\n  \n  setMovieList(list);\n\n  //Pegando o Featured\n  let originals = list.filter(i=>i.slug === 'originals');\n  let randomChosen = Math.floor(Math.random()*(originals[0].items.results.length -1))\n  let chosen = originals[0].items.results[randomChosen];\n  \n  let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\nconsole.log(chosenInfo)\n  setFeaturedData(chosenInfo);\n}\nloadAll()\n  },[])\n  \n  useEffect(()=>{\n    const scrollListener =()=>{\n      if(window.scrollY>10){\n        setBlackHeader(true);\n      }else{\n        setBlackHeader(false)\n      }\n    }\n    window.addEventListener('scroll',scrollListener);\n\n    return ()=>{\n      window.removeEventListener('scroll',scrollListener);\n    }\n  },[])\n  return(\n     <div className=\"page\">\n       <Header black ={blackHeader}/>\n       {featuredData &&\n        //Se For diferente de Vazio ele vai mostra na tela\n        <FeaturedMovie item={featuredData}/>\n\n      }\n       <section className=\"lists\">\n      {movieList.map((item,key)=>(\n       <MovieRow key={key} title={item.title} items={item.items}/>\n      ))}\n\n\n       </section>\n       <footer>\n         Feito com carinho<br/>\n         Direitos de imagem com a Netflix.<br/>\n         Dados pego com TMDB.org\n       </footer>\n     </div>\n   );\n }","C:\\Projetos\\netflixclone\\src\\Tmdb.js",["36"],"const API_KEY ='966087fb7558f38eb8141e374bf8f39f';\r\nconst API_BASE='https://api.themoviedb.org/3';\r\n\r\n/*\r\n- originais da netflix\r\n- recomendados\r\n- em alta\r\n- ação\r\n- comedia\r\n- terror\r\n- romance\r\n- documentarios\r\n*/\r\nconst basicFetch = async(endpoint) =>{\r\n\r\n    const req = await fetch(`${API_BASE}${endpoint}`);\r\n    const json = await req.json();\r\n\r\n    return json;\r\n}\r\n\r\nexport default {\r\n\r\n    getHomeList: async ()=>{\r\n        return [\r\n            {\r\n                slug: 'originals',\r\n                title: 'Originais do Netflix',\r\n                items: await basicFetch(`/discover/tv?with_network=123&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug:'trending',\r\n                title: 'Recomendados para Você',\r\n                items:await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug:'toprated',\r\n                title:'Em alta',\r\n                items:await basicFetch(`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug:'action',\r\n                title:'Ação',\r\n                items:await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug:'comedy',\r\n                title:'Comédia',\r\n                items:await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug:'horror',\r\n                title:'Terror',\r\n                items:await basicFetch(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug:'romance',\r\n                title:'Romance',\r\n                items:await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug:'documentary',\r\n                title:'Documentarios',\r\n                items:await basicFetch(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\r\n            }\r\n        ]\r\n    },\r\n    getMovieInfo: async(movieId,type)=>{\r\n        let info = {}\r\n        if(movieId){\r\n            switch(type){\r\n                case 'movie':\r\n                    info = await basicFetch(`/movie/${movieId}?language=pt-br&api_key=${API_KEY}`);\r\n                break;\r\n\r\n                case 'tv':\r\n                    info = await basicFetch(`/tv/${movieId}?language=pt-br&api_key=${API_KEY}`);\r\n\r\n                break;\r\n\r\n                default:\r\n                    info= null;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return info;\r\n    }\r\n\r\n}","C:\\Projetos\\netflixclone\\src\\components\\MovieRow.js",["37"],"import React, {useState} from 'react';\r\nimport './MovieRow.css';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nexport default ({title, items})=>{\r\n    const [scrollX,setScrollX]= useState(0);\r\n    let tamanhoList = (items.results.length *150);\r\n    console.log(tamanhoList)\r\n    const handleLeftArrow = ()=>{\r\n        let x=scrollX+ Math.round(window.innerWidth/2);\r\n        if(x> 0){\r\n            x=0\r\n        }\r\n        setScrollX(x);\r\n    }\r\n\r\n    const handleRightArrow = () =>{\r\n        let x=scrollX- Math.round(window.innerWidth/2);\r\n        if(window.innerWidth-(items.results.length*150)>x){\r\n            x=window.innerWidth-(items.results.length*150)-60\r\n        }\r\n            setScrollX(x);\r\n        \r\n       \r\n        console.log(scrollX)\r\n    }\r\n    return (\r\n        <div className=\"movieRow\">\r\n          <h2>{title}</h2>\r\n          <div className=\"movieRow--left\" onClick={handleLeftArrow}>\r\n              <NavigateBeforeIcon  style={{fontSize:50}}/>\r\n\r\n          </div>\r\n\r\n          <div className=\"movieRow--right\" onClick={handleRightArrow}>\r\n              <NavigateNextIcon  style={{fontSize:50}}/>\r\n\r\n          </div>\r\n        <div className=\"movieRow--listarea\">\r\n        <div className=\"movieRow--list\" style={{\r\n            width:tamanhoList,\r\n            marginLeft:scrollX\r\n        }}>\r\n\r\n        {items.results.length > 0 && items.results.map((item,key)=>(\r\n               <div className=\"movieRow--item\" key={key}>\r\n               <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.orinal_title} />\r\n                </div>\r\n            ))}\r\n        </div>\r\n      \r\n           \r\n        </div>\r\n        </div>\r\n    );\r\n}",["38","39"],"C:\\Projetos\\netflixclone\\src\\components\\FeaturedMovie.js",["40","41","42"],"import React from 'react';\r\nimport './FeaturedMovie.css';\r\n\r\nexport default ({item}) => {\r\n    let fistDate = new Date(item.first_air_date);\r\n    let genres= [];\r\n    for(let i in item.genres){\r\n        genres.push( item.genres[i].name);\r\n    }\r\n    return (\r\n      <section className=\"featured\" style={{\r\n          backgroundSize: 'cover',\r\n          backgroundPosition: 'center',\r\n          backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\r\n      }}>\r\n          <div className=\"featured--vertical\">\r\n              <div className=\"featured--horizontal\">\r\n                  <div className=\"featured--name\">{item.original_name}</div>\r\n                <div className=\"featured--info\">\r\n                    <div className=\"featured--points\">\r\n                        {item.vote_average} pontos\r\n                    </div>\r\n                    <div className=\"featured--year\">{fistDate.getFullYear()}</div>\r\n                    <div className=\"featured--seasons\">{item.number_of_seasons} temporada{item.number_of_seasons !== 1 && 's'}</div>\r\n                </div>\r\n                <div className=\"featured--description\">{item.overview}</div>\r\n                <div className=\"featured--buttons\">\r\n\r\n                    <a href=\"\" className=\"featured--watchbutton\">► Assistir</a>\r\n                    <a href=\"\" className=\"featured--mylistbutton\">+ Minha Lista</a>\r\n                </div>\r\n\r\n                <div className=\"freatured--genres\"><strong>Gêneros:</strong>{genres.join(', ')}</div>\r\n              </div>\r\n          </div>\r\n      </section>\r\n    )\r\n}","C:\\Projetos\\netflixclone\\src\\components\\Header.js",["43","44","45"],"import React from 'react';\r\nimport './Header.css';\r\n\r\nexport default ({black})=>{\r\n\r\n    return (\r\n\r\n        <header className={black? 'black': ''}>\r\n            <div className=\"header--logo\">\r\n                <a href=\"/\" >\r\n                    <img src=\"https://logos-download.com/wp-content/uploads/2016/03/Netflix_logo.png\" />\r\n                </a>\r\n            </div>\r\n            <div className=\"header--user\">\r\n                <a href=\"/\">\r\n                    <img src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\" />\r\n                </a>\r\n            </div>\r\n        </header>\r\n    );\r\n}",{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":7,"column":2,"nodeType":"52","endLine":69,"endColumn":3},{"ruleId":"50","severity":1,"message":"53","line":22,"column":1,"nodeType":"52","endLine":90,"endColumn":2},{"ruleId":"50","severity":1,"message":"51","line":5,"column":1,"nodeType":"52","endLine":56,"endColumn":2},{"ruleId":"46","replacedBy":"54"},{"ruleId":"48","replacedBy":"55"},{"ruleId":"50","severity":1,"message":"51","line":4,"column":1,"nodeType":"52","endLine":38,"endColumn":2},{"ruleId":"56","severity":1,"message":"57","line":29,"column":21,"nodeType":"58","endLine":29,"endColumn":66},{"ruleId":"56","severity":1,"message":"57","line":30,"column":21,"nodeType":"58","endLine":30,"endColumn":67},{"ruleId":"50","severity":1,"message":"51","line":4,"column":1,"nodeType":"52","endLine":21,"endColumn":2},{"ruleId":"59","severity":1,"message":"60","line":11,"column":21,"nodeType":"58","endLine":11,"endColumn":105},{"ruleId":"59","severity":1,"message":"60","line":16,"column":21,"nodeType":"58","endLine":16,"endColumn":112},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Assign object to a variable before exporting as module default",["61"],["62"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]